[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'tomasr/molokai'
hook_add = '''
  autocmd VimEnter * nested colorscheme molokai
'''

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'deton/jasegment.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  nnoremap Q :QuickRun<CR>
'''

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
  nmap <leader>e <Plug>NERDTreeTabsToggle<CR>
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]]
repo = 'neoclide/coc.nvim'
merge = 0
build = 'yarn install --frozen-lockfile'
hook_add = '''
  let g:coc_global_extensions = [
  \ 'coc-solargraph',
  \ 'coc-python',
  \ 'coc-tsserver',
  \ 'coc-html',
  \ 'coc-css',
  \ 'coc-json',
  \ 'coc-yaml',
  \ 'coc-docker',
  \ 'coc-sh'
  \ ]

  inoremap <silent><expr> <TAB>
  \ pumvisible() ? "\<C-n>" :
  \ <SID>check_back_space() ? "\<TAB>" :
  \ coc#refresh()
  inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

  function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~# '\s'
  endfunction
  inoremap <silent><expr> <c-space> coc#refresh()

  nmap <silent> [g <Plug>(coc-diagnostic-prev)
  nmap <silent> ]g <Plug>(coc-diagnostic-next)
  nmap <silent> gd <Plug>(coc-definition)
  nmap <silent> gy <Plug>(coc-type-definition)
  nmap <silent> gi <Plug>(coc-implementation)
  nmap <silent> gr <Plug>(coc-references)

  nnoremap <silent> K :call <SID>show_documentation()<CR>
  function! s:show_documentation()
    if (index(['vim','help'], &filetype) >= 0)
      execute 'h '.expand('<cword>')
    else
      call CocAction('doHover')
    endif
  endfunction

  autocmd CursorHold * silent call CocActionAsync('highlight')
  set updatetime=500
  nmap <leader>rn <Plug>(coc-rename)
  nnoremap <silent> <leader>h :call CocAction('doHover')<cr>
  nnoremap <silent> <space>a  :<C-u>CocList diagnostics<cr>

  if has('nvim-0.4.0') || has('patch-8.2.0750')
    nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
    nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"
    inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(1)\<cr>" : "\<Right>"
    inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(0)\<cr>" : "\<Left>"
    vnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
    vnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"
  endif

  autocmd VimEnter,Colorscheme * :hi CocErrorHighlight ctermfg=Red cterm=underline
  autocmd VimEnter,Colorscheme * :hi CocErrorSign ctermfg=Red
  autocmd VimEnter,Colorscheme * :hi CocWarningHighlight ctermfg=Brown cterm=underline
  autocmd VimEnter,Colorscheme * :hi CocWarningSign ctermfg=Brown
  autocmd VimEnter,Colorscheme * :hi CocInfoHighlight cterm=underline
  autocmd VimEnter,Colorscheme * :hi CocHintHighlight cterm=underline
  autocmd VimEnter,Colorscheme * :hi CursorColumn ctermbg=blue
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_linters = {
  \ 'ruby': ['rubocop'],
  \ 'python': ['flake8'],
  \ 'javascript': ['standard'],
  \ 'json': ['jsonlint'],
  \ 'sh': ['shell'],
  \ }

  let g:ale_enabled = 0
  let g:ale_lint_on_text_changed = 0
  let g:ale_lint_on_insert_leave = 1
  let g:ale_sign_column_always = 1
  let g:ale_keep_list_window_open = 1
  let g:ale_open_list = 1
  let g:ale_list_window_size = 5
'''

[[plugins]]
repo = 'othree/yajs.vim'

[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
  nmap n <Plug>(anzu-n-with-echo)
  nmap N <Plug>(anzu-N-with-echo)
  nmap * <Plug>(anzu-star-with-echo)
  nmap # <Plug>(anzu-sharp-with-echo)
  nmap <Esc><Esc> <Plug>(anzu-clear-search-status)
'''
hook_source = '''
  set statusline=%{anzu#search_status()}
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'cohama/agit.vim'

[[plugins]]
repo = 'maximbaz/lightline-ale'
hook_add = '''
  let g:lightline = {}
  let g:lightline.component_expand = {
  \  'linter_checking': 'lightline#ale#checking',
  \  'linter_warnings': 'lightline#ale#warnings',
  \  'linter_errors': 'lightline#ale#errors',
  \  'linter_ok': 'lightline#ale#ok',
  \ }
  let g:lightline.component_type = {
  \ 'linter_checking': 'left',
  \ 'linter_warnings': 'warning',
  \ 'linter_errors': 'error',
  \ 'linter_ok': 'left',
  \ }
  let g:lightline.active = {
  \ 'left': [ [ 'mode', 'paste' ],
  \           [ 'readonly', 'filename', 'modified' ] ],
  \ 'right': [ [ 'lineinfo' ],
  \            [ 'percent' ],
  \            [ 'fileformat', 'fileencoding', 'filetype' ],
  \            [ 'linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok' ] ] }
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_guide_size = 1
  let g:indent_guides_start_level = 2
  let g:indent_guides_auto_colors = 0
  autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=238
  autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=236
'''

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
build = 'cd app & yarn install'
hook_add = '''
let g:mkdp_auto_close = 0
'''

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'liuchengxu/vista.vim'
hook_add = '''
  let g:vista_icon_indent = ["â–¸ ", ""]
  let g:vista_default_executive = 'coc'
  let g:vista#renderer#enable_icon = 0
  nnoremap <leader>o :Vista!!<CR>
'''

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
   let g:winresizer_start_key = '<leader>w'
   let g:winresizer_gui_start_key = '<leader>W'
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'weilbith/nerdtree_choosewin-plugin'

[[plugins]]
repo = 't9md/vim-choosewin'
